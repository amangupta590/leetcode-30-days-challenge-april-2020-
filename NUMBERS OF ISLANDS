class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        if(!n){
            return 0;
        }
        int m=grid[0].size();
        if(!m){
            return 0;
        }
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    count++;
                    dfs(grid,i,j);
                }
            }
        }
        return count;
    }
    void dfs(vector<vector<char>>&grid,int x,int y){
        grid[x][y]='0';
        if((x+1)<grid.size() and grid[x+1][y]=='1' ){
            dfs(grid,x+1,y);
        }
        if(x-1>=0 and grid[x-1][y]=='1'){
            dfs(grid,x-1,y);
        }
        if((y+1)<grid[0].size() and grid[x][y+1]=='1'){
            dfs(grid,x,y+1);
        }
        if(y-1>=0 and grid[x][y-1]=='1'){
            dfs(grid,x,y-1);
        }
    }
};
